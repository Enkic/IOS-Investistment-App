//
//  PortfolioPresenter.swift
//  IOS-Investment-App
//
//  Created by enki corbin on 01/12/2020.
//  Copyright (c) 2020 enki corbin. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import UIKit

final class PortfolioPresenter {

    // MARK: - Private properties -

    private unowned let view: PortfolioViewInterface
    private let interactor: PortfolioInteractorInterface
    private let wireframe: PortfolioWireframeInterface

    // MARK: - Lifecycle -

    init(view: PortfolioViewInterface, interactor: PortfolioInteractorInterface, wireframe: PortfolioWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension PortfolioPresenter: PortfolioPresenterInterface {
    
    func getCryptoIcon(coinSymbol: String) -> UIImage? {
        
        return interactor.getCryptoIcon(coinSymbol: coinSymbol)
    }
    
    func getBoughtCoinsInfos() {
        interactor.getBoughtCoinsInfosFromApi(storeCoins: didGetBoughtCoinsInfos(coins:))
    }
    
    func getTransactions() {
        interactor.getTransactions()
    }
    
    func didGetBoughtCoinsInfos(coins: [CoinBoughtEntity]) {
        view.updateCoinsView(coins: coins)
    }
    
    func didGetTransactions(transactions: [TransactionEntity]) {
        view.updateTransactionsView(transactions: transactions)
    }
    

    func storeMoneyWallet(add amount: String) {
        if Int(amount) != nil && Int(amount)! > 0 {
            interactor.storeMoneyWallet(add: Int(amount)!)
        } else {
            view.storeMoneyWalletCallback(success: false, walletBalance: 0)
        }
    }
    
    func storeMoneyWalletCallback(success: Bool, walletBalance: Int) {
        view.storeMoneyWalletCallback(success: success, walletBalance: walletBalance)
    }
    
    func getMoneyWallet() -> String {
        return String(interactor.getMoneyWallet())
    }
    
    
    
}
